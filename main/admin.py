"""
Конфигурация панели администратора для модели 'Order'.

Этот файл определяет, как будет отображаться и взаимодействовать с моделью 'Order' в административной панели Django.

Модель 'Order' представляет заказ с аттрибутами:
- table_number (номер стола)
- items (список блюд)
- total_price (итоговая сумма)
- status (статус заказа)

Основные настройки административной панели:

1. **list_display**: Какие поля будут отображаться в списке заказов.
2. **list_filter**: Возможность фильтрации заказов по статусу.
3. **search_fields**: Возможность поиска заказов по номеру стола.

Примечания:
- Мы используем декоратор `@admin.register(Order)`, чтобы зарегистрировать модель `Order` в административной панели Django.
- В административной панели можно отфильтровать заказы по статусу и искать заказы по номеру стола.
"""

from django.contrib import admin  # Импортирование административных инструментов
from .models import Order  # Импортирование модели Order для административной панели


@admin.register(Order)  # Регистрируем модель 'Order' в административной панели
class OrderAdmin(admin.ModelAdmin):
    """
    Класс настроек для отображения модели Order в административной панели.

    Атрибуты:
    - list_display: Определяет, какие поля будут отображаться в списке объектов модели.
    - list_filter: Добавляет возможность фильтрации объектов по определённым полям.
    - search_fields: Позволяет искать объекты по заданным полям.
    """

    # Отображаемые поля в списке заказов
    list_display = ('id', 'table_number', 'total_price', 'status')

    # Добавляем фильтрацию по статусу
    list_filter = ('status',)

    # Поля для поиска (по номеру стола)
    search_fields = ('table_number',)
